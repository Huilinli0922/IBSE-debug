function [u, v, p] = StokesSolver(boundary_data, diff_operators, operators, fu, fv, fp)
%	StokesSolver  Solving Stokes problem in a periodic domain
%
%       J. Mac Huang, 06/22/2023
%       AML DT, sculpt candy project
%
%   Stokes Problem:   Lu + p_x = fu
%                     Lv + p_y = fv
%                     u_x + v_y = fp
%
%                     L is the Helmholtz operator, Helmholtz_Op
%
%
%   Inputs:  boundary_data, diff_operators, operators, inverse of SC 
%            generated by corresponding functions
%            fu, fv, fp   - driving terms defined in the equations above
%
%   Outputs: u, v         - flow velocity in x, y direction
%            p            - pressure (zero mean)
%



% grab all the data
[X, Y, nx, ny, Xw1, Yw1, Xw2, Yw2, XE, XEw, XO] = boundary_data{:};
[Laplacian, invLaplacian, Helmholtz_Op, inv_Helmholtz_Op, inv_H, N, sigma,...
    k, dx, dy, inv_dx, inv_dy, inv_H_lower, inv_H_higherk] ...
                    = diff_operators{:};
[Sn, normD, S, ST, STn, T, TT, T_1, T_2, T_3, R_1, R_2, R_3, B] ...
                    = operators{:};
                
 p = operator((operator(fu, dx)+operator(fv, dy)) ...
                - operator(fp, Helmholtz_Op), invLaplacian);
 u = operator(fu - operator(p, dx), inv_Helmholtz_Op);
 v = operator(fv - operator(p, dy), inv_Helmholtz_Op);
end