function [f, Yw1_new] = damping_mask(boundary_data, eta, sigma)
%   damping_mask   define the damping area for the absorbing boundary cond. 
%
%       J. Mac Huang, 07/17/2023
%       AML DT, iceboat project
%
%   Inputs: boundary_data      - boundary data generated by boundary_info
%           eta                - strength of the damping function
%           sigma              - width of the damping region
%
%   Output: f                  - damping function
%           Yw1_new            - location of the fictitious wall
%

% grab boundary data
[X, Y, nx, ny, Xw1, Yw1, Xw2, Yw2, XE, XEw, XO, ...
                                theta, L, L, x0_np, y0, x, y, gamma, X_np]...
                                = boundary_data{:};

% generate a Gaussian centered at the lower wall
f = eta*(exp(-(y-Yw1(1)).^2/sigma^2)); 

% find Yw1_new, which is the location where f becomes low enough
N = sqrt(length(x));
F = reshape(f, N, N); y = reshape(y, N, N);
F = F(:,1); y = y(:,1);

Yw1_new_loc = find((y>Yw1(1)).*(F/eta<1e-4));
Yw1_new = y(min(Yw1_new_loc));

end